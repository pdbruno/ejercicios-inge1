

----STARTUP---- (9 November 2022 15:36:02) as C:\Users\Patricio\Desktop\iter4\CuisUniversity-5481.image!


TusLibrosServerRestInterface installForDefaultSystem
WebServer reset

TusLibrosClientTestWindow open!

TusLibrosServerRestInterface installForDefaultSystem.
WebServer reset.
TusLibrosClientTestWindow open.!

TusLibrosServerRestInterface installForDefaultSystem.!

WebServer reset.!

TusLibrosClientTestWindow open.!

----STARTUP---- (9 November 2022 15:39:06) as C:\Users\Patricio\Desktop\iter4\CuisUniversity-5481.image!


TusLibrosServerRestInterface installForDefaultSystem!

WebServer reset!

TusLibrosClientTestWindow open!

----End fileIn of C:\Users\Patricio\Desktop\Iteracion4\WebClient.pck.st----!

TusLibrosServerRestInterface installForDefaultSystem!

TusLibrosServerRestInterface installForDefaultSystem!

----STARTUP---- (9 November 2022 15:50:20) as C:\Users\Patricio\Desktop\iter4\CuisUniversity-5481.image!


TusLibrosServerRestInterface installForDefaultSystem.!

WebServer reset.!

TusLibrosClientTestWindow open.!
!TusLibrosServerRestInterface class methodsFor: 'installation' stamp: 'pdb 11/9/2022 15:52:11' prior: 50589615!
installForDefaultSystem

	"self installForDefaultSystem"
	
	| server port interface |
	self halt.
	interface := self on: self defaultSystem.
	
	"Esto es para poder acceder a la interface de manera global - Hernan"
	Smalltalk at: #CurrentTusLibrosRestInterface put: interface.
	
	port := 9999.
	server := WebServer reset default.
	server listenOn: port.
	server 
		addService: '/createCart' 
		action: [:request | interface createCart: request ].
	server 
		addService: '/addToCart' 
		action: [:request | interface addToCart: request ].
	server
		addService: '/listCart' 
		action: [:request | interface listCart: request ].
	server
		addService: '/checkOutCart' 
		action: [:request | interface checkOutCart: request ].
	server
		addService: '/listPurchases' 
		action: [:request | interface listPurchases: request ].
	server useDebugErrorHandler ! !

TusLibrosServerRestInterface installForDefaultSystem. TusLibrosServerRestInterface !
!TusLibrosClientTestWindowModel methodsFor: 'buttonSelectors' stamp: 'pdb 11/9/2022 16:05:47' prior: 50589370!
listCart

	| cartId |
	
	(self isCartIdSelected) ifTrue:[
		cartId := self selectedCartId.
		[
			currentSelectedCartContent := restInterface listCart: cartId.
			self triggerEvent: #newCurrentSelectedCartContentArrived with: cartId
		] fork
	
	].! !
!TusLibrosClientTestWindowModel methodsFor: 'buttonSelectors' stamp: 'pdb 11/9/2022 16:06:23' prior: 50589361!
createCart

	| newCartId |
	
	[newCartId := restInterface createCartFor: 'hernan' password: 'smalltalk'.
	cartIds add: newCartId.
	self triggerEvent: #newCartIdArrived] fork! !
!TusLibrosClientTestWindowModel methodsFor: 'buttonSelectors' stamp: 'pdb 11/9/2022 16:06:34' prior: 50589348!
addToCart

	| cartId bookIsbn |

	(self areCartIdAndBookSelected) ifTrue:[
		cartId := self selectedCartId.
		bookIsbn := self selectedBook.
		[restInterface add: 1 of: bookIsbn toCartIdentifiedAs: cartId.
		self triggerEvent: #bookAddedToCart withArguments: (Array with: bookIsbn with: cartId)]fork]! !
!TusLibrosClientTestWindowModel methodsFor: 'buttonSelectors' stamp: 'pdb 11/9/2022 16:15:20' prior: 50603836!
addToCart

	| cartId bookIsbn |

	(self areCartIdAndBookSelected) ifTrue:[
		cartId := self selectedCartId.
		bookIsbn := self selectedBook.
		Beeper beep.
		[restInterface add: 1 of: bookIsbn toCartIdentifiedAs: cartId.
		self triggerEvent: #bookAddedToCart withArguments: (Array with: bookIsbn with: cartId)]fork]! !
!PreferenceSet methodsFor: 'error handling' stamp: 'pdb 11/9/2022 16:17:00' overrides: 16902107!
error: aString 
	self shouldBeImplemented.! !
!PreferenceSet methodsFor: 'accessing' stamp: 'pdb 11/9/2022 16:18:20'!
canRecordWhilePlaying
^true! !
!TusLibrosClientTestWindowModel methodsFor: 'buttonSelectors' stamp: 'pdb 11/9/2022 16:18:59' prior: 50603849!
addToCart

	| cartId bookIsbn |

	(self areCartIdAndBookSelected) ifTrue:[
		cartId := self selectedCartId.
		bookIsbn := self selectedBook.
		
		[Beeper beep.
			restInterface add: 1 of: bookIsbn toCartIdentifiedAs: cartId.
		self triggerEvent: #bookAddedToCart withArguments: (Array with: bookIsbn with: cartId)]fork]! !
!TusLibrosClientTestWindowModel methodsFor: 'buttonSelectors' stamp: 'pdb 11/9/2022 16:19:16' prior: 50603871!
addToCart

	| cartId bookIsbn |

	(self areCartIdAndBookSelected) ifTrue:[
		cartId := self selectedCartId.
		bookIsbn := self selectedBook.
		
		[
			restInterface add: 1 of: bookIsbn toCartIdentifiedAs: cartId.
		self triggerEvent: #bookAddedToCart withArguments: (Array with: bookIsbn with: cartId)]fork]! !
!TusLibrosSystemFacade methodsFor: 'facade protocol' stamp: 'pdb 11/9/2022 16:19:26' prior: 50591559!
add: anAmount of: aBook toCartIdentifiedAs: aCartId
Beeper beep.
	self withCartSessionIdentifiedAs: aCartId do: [ :cartSession | cartSession addToCart: anAmount of: aBook ]! !

TusLibrosClientTestWindow open!
!TusLibrosClientTestWindowModel methodsFor: 'private' stamp: 'pdb 11/9/2022 16:26:53'!
whenDoneAsynchronously: aBlockClosure do: anotherBlockClosure
	[
		aBlockClosure value.
		anotherBlockClosure value.
	] fork! !
!TusLibrosClientTestWindowModel methodsFor: 'buttonSelectors' stamp: 'pdb 11/9/2022 16:28:19' prior: 50603885!
addToCart

	| cartId bookIsbn |

	(self areCartIdAndBookSelected) ifTrue:[
		cartId := self selectedCartId.
		bookIsbn := self selectedBook.
		self whenDoneAsynchronously: 
				[restInterface add: 1 of: bookIsbn toCartIdentifiedAs: cartId] 
			do: 
				[self triggerEvent: #bookAddedToCart withArguments: (Array with: bookIsbn with: cartId)]
	]! !
!TusLibrosClientTestWindowModel methodsFor: 'buttonSelectors' stamp: 'pdb 11/9/2022 16:28:22' prior: 50603916!
addToCart

	| cartId bookIsbn |

	(self areCartIdAndBookSelected) ifTrue: [
		cartId := self selectedCartId.
		bookIsbn := self selectedBook.
		self whenDoneAsynchronously: 
				[restInterface add: 1 of: bookIsbn toCartIdentifiedAs: cartId] 
			do: 
				[self triggerEvent: #bookAddedToCart withArguments: (Array with: bookIsbn with: cartId)]
	]! !
!TusLibrosClientTestWindowModel methodsFor: 'buttonSelectors' stamp: 'pdb 11/9/2022 16:29:14' prior: 50603827!
createCart

	| newCartId |
	
	self whenDoneAsynchronously: 
				[newCartId := restInterface createCartFor: 'hernan' password: 'smalltalk'. 	cartIds add: newCartId.] 
			do: 
				[self triggerEvent: #newCartIdArrived]! !
!TusLibrosClientTestWindowModel methodsFor: 'buttonSelectors' stamp: 'pdb 11/9/2022 16:30:45' prior: 50603815!
listCart

	| cartId |
	
	(self isCartIdSelected) ifTrue:[
		cartId := self selectedCartId.
		self whenDoneAsynchronously: 
				[currentSelectedCartContent := restInterface listCart: cartId.] 
			do: 
				[self triggerEvent: #newCurrentSelectedCartContentArrived with: cartId]
	
	].! !
!TusLibrosClientTestWindowModel methodsFor: 'private' stamp: 'pdb 11/9/2022 16:31:47'!
whenReady: aBlockClosure triggerEvent: anEventName withArguments: anArgumentsArray
	[
		aBlockClosure value.
		self triggerEvent: anEventName withArguments: anArgumentsArray
	] fork! !

!methodRemoval: TusLibrosClientTestWindowModel #whenDoneAsynchronously:do: stamp: 'pdb 11/9/2022 16:31:51'!
whenDoneAsynchronously: aBlockClosure do: anotherBlockClosure
	[
		aBlockClosure value.
		anotherBlockClosure value.
	] fork!
!TusLibrosClientTestWindowModel methodsFor: 'buttonSelectors' stamp: 'pdb 11/9/2022 16:33:46' prior: 50603957!
listCart

	| cartId |
	
	(self isCartIdSelected) ifTrue:[
		cartId := self selectedCartId.
		self whenReady: [currentSelectedCartContent := restInterface listCart: cartId.]  
		triggerEvent: #newCurrentSelectedCartContentArrived 
		withArguments: (Array with: cartId).
	].! !
!TusLibrosClientTestWindowModel methodsFor: 'buttonSelectors' stamp: 'pdb 11/9/2022 16:34:51' prior: 50603946!
createCart

	| newCartId |
	
	self whenReady: [newCartId := restInterface createCartFor: 'hernan' password: 'smalltalk'. 	cartIds add: newCartId.]  
		triggerEvent: #newCartIdArrived 
		withArguments: (Array new).! !
!TusLibrosClientTestWindowModel methodsFor: 'buttonSelectors' stamp: 'pdb 11/9/2022 16:35:38' prior: 50603986!
listCart

	| cartId |
	
	(self isCartIdSelected) ifTrue:[
		cartId := self selectedCartId.
		
		self whenReady: [currentSelectedCartContent := restInterface listCart: cartId.]  
		triggerEvent: #newCurrentSelectedCartContentArrived 
		withArguments: (Array with: cartId).
	].! !
!TusLibrosClientTestWindowModel methodsFor: 'buttonSelectors' stamp: 'pdb 11/9/2022 16:36:50' prior: 50603931!
addToCart

	| cartId bookIsbn |

	(self areCartIdAndBookSelected) ifTrue: [
		cartId := self selectedCartId.
		bookIsbn := self selectedBook.
		self whenReady: [restInterface add: 1 of: bookIsbn toCartIdentifiedAs: cartId.]  
		triggerEvent: #bookAddedToCart 
		withArguments: (Array with: bookIsbn with: cartId)
	]! !
!TusLibrosSystemFacade methodsFor: 'facade protocol' stamp: 'pdb 11/9/2022 16:38:42' prior: 50603898!
add: anAmount of: aBook toCartIdentifiedAs: aCartId

	self withCartSessionIdentifiedAs: aCartId do: [ :cartSession | cartSession addToCart: anAmount of: aBook ]! !

----QUIT----(9 November 2022 16:39:34) CuisUniversity-5481.image priorSource: 8433061!