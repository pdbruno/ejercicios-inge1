

----QUIT----(11 September 2022 19:10:09) CuisUniversity-5481.image priorSource: 2810882!

----STARTUP---- (11 September 2022 19:10:10) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5481.image!


----QUIT----(11 September 2022 19:10:10) CuisUniversity-5481.image priorSource: 7059465!

----STARTUP---- (3 November 2022 19:22:29) as C:\Users\Patricio\Desktop\windows64\CuisUniversity-5481.image!


----End fileIn of C:\Users\Patricio\Desktop\TusLibros-33.st----!

Object subclass: #StoreController
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #StoreController category: 'TusLibros' stamp: 'pdb 11/3/2022 19:32:37'!
Object subclass: #StoreController
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

TestCase subclass: #StoreControllerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #StoreControllerTest category: 'TusLibros' stamp: 'pdb 11/3/2022 19:32:58'!
TestCase subclass: #StoreControllerTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreControllerTest methodsFor: 'tests' stamp: 'pdb 11/3/2022 19:41:19'!
test01ValidIdAndPasswordCreatesCartSuccessfully

	| controller variable |
	controller := StoreController withMP: self AndClientAuthenticator: self.
	! !
!StoreControllerTest methodsFor: 'tests' stamp: 'pdb 11/3/2022 19:41:32' prior: 50552849!
test01ValidIdAndPasswordCreatesCartSuccessfully

	| controller |
	controller := StoreController withMP: self AndClientAuthenticator: self.
	! !
!StoreControllerTest methodsFor: 'tests' stamp: 'pdb 11/3/2022 19:42:02' prior: 50552857!
test01ValidIdAndPasswordCreatesCartSuccessfully

	
	! !

TestCase subclass: #StoreControllerTest
	instanceVariableNames: 'controller'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #StoreControllerTest category: 'TusLibros' stamp: 'pdb 11/3/2022 19:42:10'!
TestCase subclass: #StoreControllerTest
	instanceVariableNames: 'controller'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreControllerTest methodsFor: 'setUp/tearDown' stamp: 'pdb 11/3/2022 19:42:33' overrides: 16961394!
setUp
	controller := StoreController withMP: self AndClientAuthenticator: self.! !
!StoreControllerTest methodsFor: 'tests' stamp: 'pdb 11/3/2022 19:45:23' prior: 50552865!
test01ValidIdAndPasswordCreatesCartSuccessfully

	controller createCartWithId: 7 andPassword: 'mengolini'
	! !
!StoreControllerTest methodsFor: 'support' stamp: 'pdb 11/3/2022 19:45:59'!
validClientId
	^'catramado'! !
!StoreControllerTest methodsFor: 'support' stamp: 'pdb 11/3/2022 19:46:11'!
validClientPassword
	^'culiiiii'! !
!StoreControllerTest methodsFor: 'tests' stamp: 'pdb 11/3/2022 19:48:35' prior: 50552889!
test01ValidIdAndPasswordCreatesCartSuccessfully

	controller createCartWithId: self validClientId andPassword: self validClientPassword 
	! !
!StoreControllerTest methodsFor: 'tests' stamp: 'pdb 11/3/2022 19:54:46' prior: 50552903!
test01ValidIdAndPasswordCreatesCartSuccessfully

	| cartId |
	cartId := controller createCartWithId: self validClientId andPassword: self validClientPassword.
	self assert: (controller listCart: cartId) isEmpty! !
!StoreController class methodsFor: 'instance creation' stamp: 'pdb 11/3/2022 19:57:17'!
withMP: aStoreControllerTest AndClientAuthenticator: aStoreControllerTest2 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithMP: aStoreControllerTest AndClientAuthenticator: aStoreControllerTest2 ! !
!StoreController class methodsFor: 'instance creation' stamp: 'pdb 11/3/2022 19:57:51' prior: 50552921!
withMP: aMerchantProcessor AndClientAuthenticator: aClientAuthenticator 

	^self new initializeWithMP: aMerchantProcessor AndClientAuthenticator: aClientAuthenticator ! !

!classDefinition: #StoreController category: 'TusLibros' stamp: 'pdb 11/3/2022 19:58:28'!
Object subclass: #StoreController
	instanceVariableNames: 'merchantProcessor'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #StoreController category: 'TusLibros' stamp: 'pdb 11/3/2022 19:58:28'!
Object subclass: #StoreController
	instanceVariableNames: 'merchantProcessor clientAuthenticator'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreController methodsFor: 'initialization' stamp: 'pdb 11/3/2022 19:58:28'!
initializeWithMP: aMerchantProcessor AndClientAuthenticator: aClientAuthenticator 
	self shouldBeImplemented.
	merchantProcessor := aMerchantProcessor.
	clientAuthenticator := aClientAuthenticator.! !
!StoreController methodsFor: 'initialization' stamp: 'pdb 11/3/2022 19:58:31' prior: 50552957!
initializeWithMP: aMerchantProcessor AndClientAuthenticator: aClientAuthenticator 

	merchantProcessor := aMerchantProcessor.
	clientAuthenticator := aClientAuthenticator.! !

!testRun: #StoreControllerTest #test01ValidIdAndPasswordCreatesCartSuccessfully stamp: 'pdb 11/3/2022 19:58:35'!
ERROR!
!StoreController methodsFor: 'creating' stamp: 'pdb 11/3/2022 19:58:55'!
createCartWithId: aString andPassword: aString2 
	self shouldBeImplemented.! !
!StoreController methodsFor: 'creating' stamp: 'pdb 11/3/2022 19:59:26' prior: 50552979!
createCartWithId: aUserId andPassword: aPassword 
	self shouldBeImplemented.! !

!classDefinition: #StoreController category: 'TusLibros' stamp: 'pdb 11/3/2022 20:02:29'!
Object subclass: #StoreController
	instanceVariableNames: 'merchantProcessor clientAuthenticator usersCarts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreController methodsFor: 'initialization' stamp: 'pdb 11/3/2022 20:02:25' prior: 50552967!
initializeWithMP: aMerchantProcessor AndClientAuthenticator: aClientAuthenticator 

	merchantProcessor := aMerchantProcessor.
	clientAuthenticator := aClientAuthenticator.
	usersCarts := Dictionary new.! !

!testRun: #StoreControllerTest #test01ValidIdAndPasswordCreatesCartSuccessfully stamp: 'pdb 11/3/2022 20:02:37'!
ERROR!
!StoreController methodsFor: 'creating' stamp: 'pdb 11/3/2022 20:03:57' prior: 50552985!
createCartWithId: aUserId andPassword: aPassword 
	
	! !

Object subclass: #StoreController
	instanceVariableNames: 'merchantProcessor clientAuthenticator carts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #StoreController category: 'TusLibros' stamp: 'pdb 11/3/2022 20:04:02'!
Object subclass: #StoreController
	instanceVariableNames: 'merchantProcessor clientAuthenticator carts'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreController methodsFor: 'initialization' stamp: 'pdb 11/3/2022 20:04:10' prior: 50552999!
initializeWithMP: aMerchantProcessor AndClientAuthenticator: aClientAuthenticator 

	merchantProcessor := aMerchantProcessor.
	clientAuthenticator := aClientAuthenticator.
	carts := Dictionary new.! !

----End fileIn of C:\Users\Patricio\Desktop\windows64\Packages\TerseGuide.pck.st----!
!StoreController methodsFor: 'creating' stamp: 'pdb 11/3/2022 20:05:19' prior: 50553012!
createCartWithId: aUserId andPassword: aPassword 
	
	carts add: 1->Cart new.! !

Object subclass: #Store
	instanceVariableNames: 'merchantProcessor clientAuthenticator carts catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #Store category: 'TusLibros' stamp: 'pdb 11/3/2022 20:09:21'!
Object subclass: #Store
	instanceVariableNames: 'merchantProcessor clientAuthenticator carts catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #StoreController category: 'TusLibros' stamp: 'pdb 11/3/2022 20:10:07'!
Object subclass: #StoreController
	instanceVariableNames: 'merchantProcessor clientAuthenticator carts store'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreController methodsFor: 'initialization' stamp: 'pdb 11/3/2022 20:10:02' prior: 50553031!
initializeWithMP: aMerchantProcessor AndClientAuthenticator: aClientAuthenticator 

	merchantProcessor := aMerchantProcessor.
	clientAuthenticator := aClientAuthenticator.
	store := Store withMerchantProcessor:aMerchantProcessor andClientAuthenticator: aClientAuthenticator.! !
!Store class methodsFor: 'instance creation' stamp: 'pdb 11/3/2022 20:10:23'!
withMerchantProcessor: aStoreControllerTest andClientAuthenticator: aStoreControllerTest2 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithMerchantProcessor: aStoreControllerTest andClientAuthenticator: aStoreControllerTest2 ! !
!Store class methodsFor: 'instance creation' stamp: 'pdb 11/3/2022 20:11:05' prior: 50556000!
withMerchantProcessor: aMerchantProcessor andClientAuthenticator: aClientAuthenticator 


	^self new initializeWithMerchantProcessor: aMerchantProcessor andClientAuthenticator: aClientAuthenticator ! !
!Store methodsFor: 'initialization' stamp: 'pdb 11/3/2022 20:11:21'!
initializeWithMerchantProcessor: aMerchantProcessor andClientAuthenticator: aClientAuthenticator 
	self shouldBeImplemented.
	merchantProcessor := aMerchantProcessor.
	clientAuthenticator := aClientAuthenticator.! !

Object subclass: #StoreInterface
	instanceVariableNames: 'merchantProcessor clientAuthenticator carts store'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #StoreInterface category: 'TusLibros' stamp: 'pdb 11/3/2022 20:16:41'!
Object subclass: #StoreInterface
	instanceVariableNames: 'merchantProcessor clientAuthenticator carts store'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreControllerTest methodsFor: 'setUp/tearDown' stamp: 'pdb 11/3/2022 20:16:57' prior: 50552883 overrides: 16961394!
setUp
	controller := StoreInterface withMP: self AndClientAuthenticator: self.! !

!classDefinition: #StoreControllerTest category: 'TusLibros' stamp: 'pdb 11/3/2022 20:17:05'!
TestCase subclass: #StoreControllerTest
	instanceVariableNames: 'controller interface'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreControllerTest methodsFor: 'setUp/tearDown' stamp: 'pdb 11/3/2022 20:17:01' prior: 50556047 overrides: 16961394!
setUp
	interface := StoreInterface withMP: self AndClientAuthenticator: self.! !

!classRemoval: #StoreController stamp: 'pdb 11/3/2022 20:17:16'!
Object subclass: #StoreController
	instanceVariableNames: 'merchantProcessor clientAuthenticator carts store'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

TestCase subclass: #StoreInterfaceTest
	instanceVariableNames: 'controller interface'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #StoreInterfaceTest category: 'TusLibros' stamp: 'pdb 11/3/2022 20:17:54'!
TestCase subclass: #StoreInterfaceTest
	instanceVariableNames: 'controller interface'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #StoreControllerTest stamp: 'pdb 11/3/2022 20:17:59'!
TestCase subclass: #StoreControllerTest
	instanceVariableNames: 'controller interface'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classRemoval: #Store stamp: 'pdb 11/3/2022 20:35:01'!
Object subclass: #Store
	instanceVariableNames: 'merchantProcessor clientAuthenticator carts catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!testRun: #CartTest #test01NewCartsAreCreatedEmpty stamp: 'pdb 11/3/2022 20:35:23'!
PASSED!

!testRun: #CartTest #test02CanNotAddItemsThatDoNotBelongToStore stamp: 'pdb 11/3/2022 20:35:23'!
PASSED!

!testRun: #CartTest #test03AfterAddingAnItemTheCartIsNotEmptyAnymore stamp: 'pdb 11/3/2022 20:35:23'!
PASSED!

!testRun: #CartTest #test04CanNotAddNonPositiveNumberOfItems stamp: 'pdb 11/3/2022 20:35:23'!
PASSED!

!testRun: #CartTest #test05CanNotAddMoreThanOneItemNotSellByTheStore stamp: 'pdb 11/3/2022 20:35:23'!
PASSED!

!testRun: #CartTest #test06CartRemembersAddedItems stamp: 'pdb 11/3/2022 20:35:23'!
PASSED!

!testRun: #CartTest #test07CartDoesNotHoldNotAddedItems stamp: 'pdb 11/3/2022 20:35:23'!
PASSED!

!testRun: #CartTest #test08CartRemembersTheNumberOfAddedItems stamp: 'pdb 11/3/2022 20:35:23'!
PASSED!

!testRun: #CashierTest #test01CanNotCheckoutAnEmptyCart stamp: 'pdb 11/3/2022 20:35:23'!
PASSED!

!testRun: #CashierTest #test02CalculatedTotalIsCorrect stamp: 'pdb 11/3/2022 20:35:23'!
PASSED!

!testRun: #CashierTest #test03CanNotCheckoutWithAnExpiredCreditCart stamp: 'pdb 11/3/2022 20:35:23'!
PASSED!

!testRun: #CashierTest #test04CheckoutRegistersASale stamp: 'pdb 11/3/2022 20:35:23'!
PASSED!

!testRun: #CashierTest #test05CashierChargesCreditCardUsingMerchantProcessor stamp: 'pdb 11/3/2022 20:35:23'!
PASSED!

!testRun: #CashierTest #test06CashierDoesNotSaleWhenTheCreditCardHasNoCredit stamp: 'pdb 11/3/2022 20:35:23'!
PASSED!
!StoreInterfaceTest methodsFor: 'no messages' stamp: 'pdb 11/3/2022 20:41:00'!
validClientPassword
	
	^'culiiiii'! !
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 20:42:12'!
test01ValidIdAndPasswordCreatesCartSuccessfully

	| cartId |
	cartId := controller createCartWithId: self validClientId andPassword: self validClientPassword.
	self assert: (controller listCart: cartId) isEmpty! !
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 20:42:27'!
validClientId
	^'catramado'! !
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 20:42:54' overrides: 16961394!
setUp
	controller := StoreInterface withMP: self AndClientAuthenticator: self.! !

TestCase subclass: #StoreInterfaceTest
	instanceVariableNames: 'controller'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #StoreInterfaceTest category: 'TusLibros' stamp: 'pdb 11/3/2022 20:43:42'!
TestCase subclass: #StoreInterfaceTest
	instanceVariableNames: 'controller'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #StoreInterfaceTest category: 'TusLibros' stamp: 'pdb 11/3/2022 20:43:58'!
TestCase subclass: #StoreInterfaceTest
	instanceVariableNames: 'interface'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 20:43:58' prior: 50556167 overrides: 16961394!
setUp
	interface := StoreInterface withMP: self AndClientAuthenticator: self.! !
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 20:43:58' prior: 50556152!
test01ValidIdAndPasswordCreatesCartSuccessfully

	| cartId |
	cartId := interface createCartWithId: self validClientId andPassword: self validClientPassword.
	self assert: (interface listCart: cartId) isEmpty! !
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 20:44:30' prior: 50556193 overrides: 16961394!
setUp
	interface := StoreInterface withMP: self clientAuthenticator: self andCatalog: self createCatalog.! !
!StoreInterfaceTest methodsFor: 'support' stamp: 'pdb 11/3/2022 20:44:55'!
createCatalog
	self shouldBeImplemented.! !

!classDefinition: #StoreInterfaceTest category: 'TusLibros' stamp: 'pdb 11/3/2022 20:46:28'!
TestCase subclass: #StoreInterfaceTest
	instanceVariableNames: 'interface testObjectsFactory'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 20:46:27' prior: 50556210 overrides: 16961394!
setUp
	interface := StoreInterface withMP: self clientAuthenticator: self andCatalog: self createCatalog.
	testObjectsFactory := StoreTestObjectsFactory new.! !
!StoreInterfaceTest methodsFor: 'setUp/tearDown' stamp: 'pdb 11/3/2022 20:47:05' prior: 50556230 overrides: 16961394!
setUp
	
	testObjectsFactory := StoreTestObjectsFactory new.
	interface := StoreInterface withMP: self clientAuthenticator: self andCatalog: testObjectsFactory defaultCatalog.! !
!StoreInterface class methodsFor: 'instance creation' stamp: 'pdb 11/3/2022 20:47:13'!
withMP: aStoreInterfaceTest clientAuthenticator: aStoreInterfaceTest2 andCatalog: aDictionary 
	"DO NOT FORGET TO RENAME COLLABORATORS AND REMOVE THIS COMMENT!!!!"
	self shouldBeImplemented.
	^self new initializeWithMP: aStoreInterfaceTest clientAuthenticator: aStoreInterfaceTest2 andCatalog: aDictionary ! !
!StoreInterface class methodsFor: 'instance creation' stamp: 'pdb 11/3/2022 20:47:41' prior: 50556248!
withMP: aMerchantProcessor clientAuthenticator: aClientAuthenticator andCatalog: aCatalog 

	^self new initializeWithMP: aMerchantProcessor clientAuthenticator: aClientAuthenticator andCatalog: aCatalog ! !

!classDefinition: #StoreInterface category: 'TusLibros' stamp: 'pdb 11/3/2022 20:47:58'!
Object subclass: #StoreInterface
	instanceVariableNames: 'merchantProcessor clientAuthenticator carts store catalog'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreInterface methodsFor: 'initialization' stamp: 'pdb 11/3/2022 20:47:58'!
initializeWithMP: aMerchantProcessor clientAuthenticator: aClientAuthenticator andCatalog: aCatalog 
	self shouldBeImplemented.
	merchantProcessor := aMerchantProcessor.
	clientAuthenticator := aClientAuthenticator.
	catalog := aCatalog.! !
!StoreInterface methodsFor: 'initialization' stamp: 'pdb 11/3/2022 20:48:07' prior: 50556279!
initializeWithMP: aMerchantProcessor clientAuthenticator: aClientAuthenticator andCatalog: aCatalog 
	merchantProcessor := aMerchantProcessor.
	clientAuthenticator := aClientAuthenticator.
	catalog := aCatalog.! !

!testRun: #StoreInterfaceTest #test01ValidIdAndPasswordCreatesCartSuccessfully stamp: 'pdb 11/3/2022 20:48:09'!
ERROR!
!StoreInterface methodsFor: 'interface' stamp: 'pdb 11/3/2022 20:48:36'!
createCartWithId: aString andPassword: aString2 
	self shouldBeImplemented.! !

!classDefinition: #StoreInterface category: 'TusLibros' stamp: 'pdb 11/3/2022 20:51:38'!
Object subclass: #StoreInterface
	instanceVariableNames: 'merchantProcessor clientAuthenticator carts store catalog cartSessions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!

!classDefinition: #StoreInterface category: 'TusLibros' stamp: 'pdb 11/3/2022 20:51:39'!
Object subclass: #StoreInterface
	instanceVariableNames: 'merchantProcessor clientAuthenticator carts store catalog cartSessions idCounter'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'TusLibros'!
!StoreInterface methodsFor: 'interface' stamp: 'pdb 11/3/2022 20:51:31' prior: 50556303!
createCartWithId: aClientId andPassword: aPassword 
	
	self assertCorrectClientId: aClientId andPassword: aPassword.
	cartSessions add: (idCounter->Cart acceptingItemsOf: catalog).! !
!StoreInterface methodsFor: 'initialization' stamp: 'pdb 11/3/2022 20:52:38' prior: 50556290!
initializeWithMP: aMerchantProcessor clientAuthenticator: aClientAuthenticator andCatalog: aCatalog 
	merchantProcessor := aMerchantProcessor.
	clientAuthenticator := aClientAuthenticator.
	catalog := aCatalog.
	idCounter := 0
	! !
!StoreInterface methodsFor: 'initialization' stamp: 'pdb 11/3/2022 20:52:58' prior: 50556336!
initializeWithMP: aMerchantProcessor clientAuthenticator: aClientAuthenticator andCatalog: aCatalog 
	merchantProcessor := aMerchantProcessor.
	clientAuthenticator := aClientAuthenticator.
	catalog := aCatalog.
	idCounter := 0.
	cartSessions := Dictionary new.! !
!StoreInterface methodsFor: 'interface' stamp: 'pdb 11/3/2022 20:53:21' prior: 50556327!
createCartWithId: aClientId andPassword: aPassword 
	
	self assertCorrectClientId: aClientId andPassword: aPassword.
	idCounter := idCounter + 1
	cartSessions add: (idCounter->Cart acceptingItemsOf: catalog).
	^idCounter.! !
!StoreInterface methodsFor: 'interface' stamp: 'pdb 11/3/2022 20:53:37' prior: 50556359!
createCartWithId: aClientId andPassword: aPassword 
	
	self assertCorrectClientId: aClientId andPassword: aPassword.
	idCounter := idCounter + 1-
	cartSessions add: (idCounter->Cart acceptingItemsOf: catalog).
	^idCounter.! !
!StoreInterface methodsFor: 'interface' stamp: 'pdb 11/3/2022 20:53:38' prior: 50556369!
createCartWithId: aClientId andPassword: aPassword 
	
	self assertCorrectClientId: aClientId andPassword: aPassword.
	idCounter := idCounter + 1.
	cartSessions add: (idCounter->Cart acceptingItemsOf: catalog).
	^idCounter.! !

!testRun: #StoreInterfaceTest #test01ValidIdAndPasswordCreatesCartSuccessfully stamp: 'pdb 11/3/2022 20:53:44'!
ERROR!

!testRun: #StoreInterfaceTest #test01ValidIdAndPasswordCreatesCartSuccessfully stamp: 'pdb 11/3/2022 20:53:44'!
ERROR!
!StoreInterface methodsFor: 'authentication' stamp: 'pdb 11/3/2022 20:54:08'!
assertCorrectClientId: aString andPassword: aString2 
	self shouldBeImplemented.! !
!StoreInterface methodsFor: 'authentication' stamp: 'pdb 11/3/2022 20:55:10' prior: 50556396!
assertCorrectClientId: aString andPassword: aString2 
	clientAuthenticator authenticateClientId: aString andPassword: aString2.! !

!testRun: #StoreInterfaceTest #test01ValidIdAndPasswordCreatesCartSuccessfully stamp: 'pdb 11/3/2022 20:55:11'!
ERROR!
!StoreInterfaceTest methodsFor: 'support' stamp: 'pdb 11/3/2022 20:55:20'!
authenticateClientId: aString andPassword: aString2 
	self shouldBeImplemented.! !
!StoreInterfaceTest methodsFor: 'support' stamp: 'pdb 11/3/2022 20:56:37' prior: 50556413!
authenticateClientId: aClientId andPassword: aPassword 
	^aClientId = self validClientId  and: [aPassword = self validClientPassword ]! !
!StoreInterface methodsFor: 'authentication' stamp: 'pdb 11/3/2022 20:57:16' prior: 50556402!
assertCorrectClientId: aString andPassword: aString2 
	(clientAuthenticator authenticateClientId: aString andPassword: aString2) ifFalse: [self error: self class incorrectAuthenticationErrorMessage].! !

!testRun: #StoreInterfaceTest #test01ValidIdAndPasswordCreatesCartSuccessfully stamp: 'pdb 11/3/2022 20:57:19'!
ERROR!
!StoreInterface methodsFor: 'interface' stamp: 'pdb 11/3/2022 20:57:32' prior: 50556379!
createCartWithId: aClientId andPassword: aPassword 
	
	self assertCorrectClientId: aClientId andPassword: aPassword.
	idCounter := idCounter + 1.
	cartSessions add: (idCounter->(Cart acceptingItemsOf: catalog)).
	^idCounter.! !

!testRun: #StoreInterfaceTest #test01ValidIdAndPasswordCreatesCartSuccessfully stamp: 'pdb 11/3/2022 20:57:33'!
ERROR!
!StoreInterface methodsFor: 'initialization' stamp: 'pdb 11/3/2022 20:57:49'!
listCart: aSmallInteger 
	self shouldBeImplemented.! !
!Cart methodsFor: 'queries' stamp: 'pdb 11/3/2022 21:03:02'!
items

	^items copy! !
!StoreInterface methodsFor: 'initialization' stamp: 'pdb 11/3/2022 21:03:52' prior: 50556454!
listCart: aSmallInteger 
	^Dictionary new.! !

!testRun: #StoreInterfaceTest #test01ValidIdAndPasswordCreatesCartSuccessfully stamp: 'pdb 11/3/2022 21:03:54'!
PASSED!

!testRun: #StoreInterfaceTest #test01ValidIdAndPasswordCreatesCartSuccessfully stamp: 'pdb 11/3/2022 21:04:28'!
PASSED!
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 21:05:51'!
test02InvalidIdAndPasswordThrowsError

	| cartId |
	cartId := interface createCartWithId: self validClientId andPassword: self validClientPassword.
	self assert: (interface listCart: cartId) isEmpty! !
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 21:06:06' prior: 50556474!
test02InvalidIdAndPasswordThrowsError

	| cartId |
	cartId := interface createCartWithId: self invalidClientId andPassword: self invalidClientPassword.
	self assert: (interface listCart: cartId) isEmpty! !
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 21:07:42' prior: 50556484!
test02InvalidIdAndPasswordThrowsError

	| cartId |
	cartId := 
	self should: [interface createCartWithId: self invalidClientId andPassword: self invalidClientPassword.] raise: Error - MessageNotUnderstood withMessageText: StoreInterface class ! !
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 21:07:51' prior: 50556494!
test02InvalidIdAndPasswordThrowsError

	self should: [interface createCartWithId: self invalidClientId andPassword: self invalidClientPassword.] raise: Error - MessageNotUnderstood withMessageText: StoreInterface class ! !
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 21:08:26' prior: 50556505!
test02InvalidIdAndPasswordThrowsError

	self should: [interface createCartWithId: self invalidClientId andPassword: self invalidClientPassword.] raise: Error - MessageNotUnderstood withMessageText: StoreInterface class incorrectAuthenticationErrorMessage! !
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 21:08:27' prior: 50556516!
test02InvalidIdAndPasswordThrowsError

	self should: [interface createCartWithId: self invalidClientId andPassword: self invalidClientPassword.] raise: Error - MessageNotUnderstood withMessageText: StoreInterface class incorrectAuthenticationErrorMessage.! !

!testRun: #StoreInterfaceTest #test02InvalidIdAndPasswordThrowsError stamp: 'pdb 11/3/2022 21:08:29'!
ERROR!
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 21:08:38' prior: 50556528!
test02InvalidIdAndPasswordThrowsError

	self should: [interface createCartWithId: self invalidClientId andPassword: self invalidClientPassword.] raise: Error - MessageNotUnderstood withMessageText: StoreInterface incorrectAuthenticationErrorMessage.! !

!testRun: #StoreInterfaceTest #test02InvalidIdAndPasswordThrowsError stamp: 'pdb 11/3/2022 21:08:41'!
ERROR!
!StoreInterface class methodsFor: 'error description' stamp: 'pdb 11/3/2022 21:08:56'!
incorrectAuthenticationErrorMessage
	self shouldBeImplemented.! !
!StoreInterface class methodsFor: 'error description' stamp: 'pdb 11/3/2022 21:09:21' prior: 50556558!
incorrectAuthenticationErrorMessage
	^'Invalid id or password'.! !

!testRun: #StoreInterfaceTest #test02InvalidIdAndPasswordThrowsError stamp: 'pdb 11/3/2022 21:09:26'!
ERROR!
!StoreInterfaceTest methodsFor: 'support' stamp: 'pdb 11/3/2022 21:09:34'!
invalidClientId
	self shouldBeImplemented.! !
!StoreInterfaceTest methodsFor: 'support' stamp: 'pdb 11/3/2022 21:09:46' prior: 50556572!
invalidClientId
	^'cuca'! !

!testRun: #StoreInterfaceTest #test02InvalidIdAndPasswordThrowsError stamp: 'pdb 11/3/2022 21:09:48'!
ERROR!
!StoreInterfaceTest methodsFor: 'support' stamp: 'pdb 11/3/2022 21:09:52'!
invalidClientPassword
	self shouldBeImplemented.! !
!StoreInterfaceTest methodsFor: 'support' stamp: 'pdb 11/3/2022 21:10:04' prior: 50556584!
invalidClientPassword
	^'monga'.! !

!testRun: #StoreInterfaceTest #test02InvalidIdAndPasswordThrowsError stamp: 'pdb 11/3/2022 21:10:16'!
PASSED!

!testRun: #StoreInterfaceTest #test01ValidIdAndPasswordCreatesCartSuccessfully stamp: 'pdb 11/3/2022 21:10:16'!
PASSED!

!testRun: #StoreInterfaceTest #test02InvalidIdAndPasswordThrowsError stamp: 'pdb 11/3/2022 21:10:16'!
PASSED!
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 21:11:15'!
test03AddToCartAddsItemSuccesfully

	self should: [interface createCartWithId: self invalidClientId andPassword: self invalidClientPassword.] raise: Error - MessageNotUnderstood withMessageText: StoreInterface incorrectAuthenticationErrorMessage.! !
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 21:12:04' prior: 50556604!
test03AddToCartAddsItemSuccesfully

	| cartId |
	
	cartId := interface createCartWithId: self validClientId andPassword: self validClientPassword.! !
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 21:13:59' prior: 50556616!
test03AddToCartAddsItemSuccesfully

	| cartId |
	
	cartId := interface createCartWithId: self validClientId andPassword: self validClientPassword.
	interface addToCart: cartId withBook: self.! !
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 21:14:28' prior: 50556624!
test03AddToCartAddsItemSuccesfully

	| cartId |
	
	cartId := interface createCartWithId: self validClientId andPassword: self validClientPassword.
	interface addToCart: cartId withBook: testObjectsFactory itemSellByTheStore withQty: 4.! !
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 21:14:46' prior: 50556634!
test03AddToCartAddsItemSuccesfully

	| cartId |
	
	cartId := interface createCartWithId: self validClientId andPassword: self validClientPassword.
	interface addToCart: cartId book: testObjectsFactory itemSellByTheStore withQuantity: 4.! !
!StoreInterfaceTest methodsFor: 'as yet unclassified' stamp: 'pdb 11/3/2022 21:15:59' prior: 50556645!
test03AddToCartAddsItemSuccesfully

	| cartId |
	
	cartId := interface createCartWithId: self validClientId andPassword: self validClientPassword.
	interface addToCart: cartId book: testObjectsFactory itemSellByTheStore withQuantity: 4.
	
	self assert: (interface listCart: cartId) equals: (Dictionary new add: testObjectsFactory itemSellByTheStore -> 4).! !

!testRun: #StoreInterfaceTest #test03AddToCartAddsItemSuccesfully stamp: 'pdb 11/3/2022 21:16:01'!
ERROR!
!StoreInterface methodsFor: 'interface' stamp: 'pdb 11/3/2022 21:16:09'!
addToCart: aSmallInteger book: aString withQuantity: aSmallInteger3 
	self shouldBeImplemented.! !
!StoreInterface methodsFor: 'interface' stamp: 'pdb 11/3/2022 21:16:13' prior: 50556673!
addToCart: aSmallInteger book: aString withQuantity: aSmallInteger3 
! !
!StoreInterface methodsFor: 'interface' stamp: 'pdb 11/3/2022 21:16:52' prior: 50556679!
addToCart: aCartId book: aString withQuantity: aSmallInteger3 
	
	(cartSessions at: aCartId) add: self.! !
!StoreInterface methodsFor: 'interface' stamp: 'pdb 11/3/2022 21:17:23' prior: 50556685!
addToCart: aCartId book: aBook withQuantity: aQuantity 
	
	(cartSessions at: aCartId) add: aQuantity of: aBook.! !

!testRun: #StoreInterfaceTest #test01ValidIdAndPasswordCreatesCartSuccessfully stamp: 'pdb 11/3/2022 21:17:25'!
PASSED!

!testRun: #StoreInterfaceTest #test02InvalidIdAndPasswordThrowsError stamp: 'pdb 11/3/2022 21:17:25'!
PASSED!

!testRun: #StoreInterfaceTest #test03AddToCartAddsItemSuccesfully stamp: 'pdb 11/3/2022 21:17:25'!
FAILURE!

!testRun: #StoreInterfaceTest #test03AddToCartAddsItemSuccesfully stamp: 'pdb 11/3/2022 21:17:25'!
FAILURE!

----QUIT----(3 November 2022 21:18:26) CuisUniversity-5481.image priorSource: 7059698!